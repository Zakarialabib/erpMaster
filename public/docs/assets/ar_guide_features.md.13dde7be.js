import{_ as t,o as d,c as e,Q as r}from"./chunks/framework.83854b5a.js";const m=JSON.parse('{"title":"Features","description":"","frontmatter":{"title":"Features","lang":"ar-MA"},"headers":[],"relativePath":"ar/guide/features.md","filePath":"ar/guide/features.md","lastUpdated":null}'),o={name:"ar/guide/features.md"},i=r('<h1 id="livewire-features" tabindex="-1">Livewire Features <a class="header-anchor" href="#livewire-features" aria-label="Permalink to &quot;Livewire Features&quot;">â€‹</a></h1><table><thead><tr><th>Controller/Path</th><th>Methods</th></tr></thead><tbody><tr><td>Account/Index</td><td>mount: void, render</td></tr><tr><td>Account/Orders</td><td>mount($customer): void, render</td></tr><tr><td>Account/UserInfos</td><td>mount($customer): void, render, save: void</td></tr><tr><td>Adjustment/Create</td><td>mount: void, render, updatedWarehouseId($value): void, store, productSelected(array $product): void, removeProduct($key): void</td></tr><tr><td>Adjustment/Edit</td><td>mount($id): void, update, productSelected(array $product): void, removeProduct($key): void, updatedWarehouseId($value): void, warehouses, render</td></tr><tr><td>Adjustment/Index</td><td>render, deleteSelected: void, delete(Adjustment $adjustment): void</td></tr><tr><td>Adjustment/ProductTable</td><td>mount($adjustedProducts = null): void, render, productSelected($product): void, removeProduct($key): void</td></tr><tr><td>Adjustment/Show</td><td>render, showModal($adjustment): void</td></tr><tr><td>Auth/ConfirmPassword</td><td>confirmPassword, render</td></tr><tr><td>Auth/ForgotPassword</td><td>sendResetPasswordLink: void, broker, render</td></tr><tr><td>Auth/Login</td><td>authenticate, render</td></tr><tr><td>Auth/Register</td><td>mount: void, register, render</td></tr><tr><td>Auth/ResetPassword</td><td>mount(string $token): void, resetPassword: void, render</td></tr><tr><td>Auth/Verify</td><td>sendVerification: void, logout: void, render</td></tr><tr><td>Backup/Index</td><td>settingsModal: void, saveToDriveManually(string $filename): void, cleanBackups: void, backupToDrive: void, updateSettigns: void, generate: void, downloadBackup($file), delete($name): void, getContentsProperty, render</td></tr><tr><td>Blog/Create</td><td>render, createModal: void, create: void, blogCategories</td></tr><tr><td>Blog/Edit</td><td>blogCategories, editModal($id): void, render, update: void</td></tr><tr><td>Blog/Index</td><td>delete: void, deleteSelected: void, deleteModal($blog): void, render</td></tr><tr><td>BlogCategory/Create</td><td>render, createModal: void, create: void</td></tr><tr><td>BlogCategory/Edit</td><td>editModal($id): void, update: void, render: View</td></tr><tr><td>BlogCategory/Index</td><td>confirmed: void, deleteModal($blogcategory): void, delete: void, deleteSelected: void, render</td></tr><tr><td>Brands/Create</td><td>createModal: void, create: void, render</td></tr><tr><td>Brands/Edit</td><td>editModal($id): void, update: void, render</td></tr><tr><td>Brands/Index</td><td>render, showModal(Brand $brand): void, confirmed: void, deleteModal($brand): void, deleteSelected: void, delete: void, importModal: void, downloadSample, import: void</td></tr><tr><td>Brands/Show</td><td>showModal($id): void, render: View</td></tr><tr><td>CashRegister/Create</td><td>createModal: void, create: void, warehouses: \\Illuminate\\Support\\Collection, render</td></tr><tr><td>CashRegister/Index</td><td>mount: void, filterByType($type): void, render, deleteSelected: void, delete(CashRegister $cashRegister): void</td></tr><tr><td>CashRegister/Show</td><td>showModal($id), close, render</td></tr><tr><td>Categories/Create</td><td>createModal: void, create: void, render</td></tr><tr><td>Categories/Edit</td><td>render, editModal($id): void, update: void</td></tr><tr><td>Categories/Import</td><td>importModal: void, downloadSample, import: void, render</td></tr><tr><td>Categories/Index</td><td>render: mixed, showModal(Category $category): void, confirmed: void, deleteModal($category): void, deleteSelected: void, delete: void</td></tr><tr><td>Admin/Contacts</td><td>render, deleteSelected: void, delete(Contact $contact): void</td></tr><tr><td>Currency/Create</td><td>render, createModal: void, create: void</td></tr><tr><td>Currency/Edit</td><td>render, editModal($id): void, update: void</td></tr><tr><td>Currency/Index</td><td>render, delete(Currency $currency): void</td></tr><tr><td>Currency/Show</td><td>showModal($id): void, render</td></tr><tr><td>CustomerGroup/Create</td><td>render, createModal: void, create: void</td></tr><tr><td>CustomerGroup/Edit</td><td>render, editModal($id): void, update: void</td></tr><tr><td>CustomerGroup/Index</td><td>render, showModal($id): void, deleteSelected: void, delete(CustomerGroup $customergroup): void</td></tr><tr><td>Customers/Create</td><td>createModal: void, create: void, render</td></tr><tr><td>Customers/Details</td><td>mount($id): void, sales, customerPayments, totalSales: int</td></tr><tr><td>Customers/Edit</td><td>render, editModal($id): void, update: void</td></tr><tr><td>Customers/GoogleContact</td><td>showContacts, fetchContacts, listContacts: array, convertToCustomer(string $resourceName), render</td></tr><tr><td>Customers/Index</td><td>render: View</td></tr><tr><td>Customers/PayDue</td><td>getSalesCustomerDueProperty, payModal($customer): void, makePayment: void, render</td></tr><tr><td>Customers/Show</td><td>showModal($id): void, render</td></tr><tr><td>Admin/Dashboard</td><td>render</td></tr><tr><td>Delivery/Create</td><td>render, createModal($item_id = null, $type = null): void, create: void, shippings, sales, orders</td></tr><tr><td>Delivery/Edit</td><td>render, editModal($id): void, update: void, shippings, sales, orders</td></tr><tr><td>Delivery/Index</td><td>mount: void, filterByType($type): void, render, deleteSelected: void, delete(Delivery $delivery): void</td></tr><tr><td>Delivery/Show</td><td>showModal($id): void, render</td></tr><tr><td>Email/Create</td><td>render: View</td></tr><tr><td>Email/Edit</td><td>updatedMessage($value): void, render: View</td></tr><tr><td>Email/Index</td><td>render: View</td></tr><tr><td>Expense/Create</td><td>render, createModal: void, create: void, expenseCategories, warehouses</td></tr><tr><td>Expense/Edit</td><td>expenseCategories, warehouses, render, editModal($id): void, update: void</td></tr><tr><td>Expense/Index</td><td>mount: void, filterByType($type): void, render, deleteSelected: void, delete(Expense $expense): void, showModal($id): void, downloadSelected: BinaryFileResponse, downloadAll: BinaryFileResponse, exportSelected: BinaryFileResponse, exportAll: BinaryFileResponse</td></tr><tr><td>ExpenseCategories/Create</td><td>render, createModal: void, create: void</td></tr><tr><td>ExpenseCategories/Edit</td><td>render, editModal($id): void, update: void</td></tr><tr><td>ExpenseCategories/Index</td><td>render, deleteSelected: void, delete(ExpenseCategory $expenseCategory): void</td></tr><tr><td>Faq/Create</td><td>render: View</td></tr><tr><td>Faq/Edit</td><td>editModal($faq): void, update: void, render: View</td></tr><tr><td>Faq/Index</td><td>render: View</td></tr><tr><td>FeaturedBanner/Create</td><td>mount: void, render: View</td></tr><tr><td>FeaturedBanner/Index</td><td>mount: void, render: View</td></tr><tr><td>Language/Create</td><td>createModal: void, create: void, render</td></tr><tr><td>Language/Edit</td><td>editModal($id): void, update: void, render</td></tr><tr><td>Language/EditTranslation</td><td>mount($id): void, updateTranslation: void, render</td></tr><tr><td>Language/Index</td><td>languages, render, onSetDefault($id): void, sync($id): void, delete(Language $language): void</td></tr><tr><td>Menu/Index</td><td>mount: void, filterByPlacement($value): void, clone: void, render, update($id): void, store: void, updateMenuOrder($ids): void, predefinedMenu: void, delete(Menu $menu): void</td></tr><tr><td>Notification/Index</td><td>render</td></tr><tr><td>Order/Edit</td><td>render, editModal($id): void, shippings, customers, update: void</td></tr><tr><td>Order/Index</td><td>mount: void, filterByType($type): void, render: View</td></tr><tr><td>Order/InvoicePrint</td><td>mount($id), render</td></tr><tr><td>Order/Show</td><td>mount($id): void, render</td></tr><tr><td>OrderForm/Index</td><td>render: View</td></tr><tr><td>Page/Create</td><td>saveEditorState($editorJsonData): void, store, render</td></tr><tr><td>Page/Edit</td><td>saveEditorState($editorJsonData): void, mount($id): void, update: void, render</td></tr><tr><td>Page/Index</td><td>render, delete: void, deleteSelected: void, confirmed: void, deleteModal($page): void</td></tr><tr><td>Page/Settings</td><td>settings, sections, pages, deleteSection($type, $id, $index): void, getConfig($type, $id), reorderSections($sectionIndexes): void, editSection($type, $id, $index): void, updateSection: void, save: void, templates: array, selectBgColor($color): void, selectColor($color): void, delete(PageSetting $setting): void</td></tr><tr><td>Page/Template</td><td>mount: void, createModal: void, updatedSelectTemplate: void, store: void, render</td></tr><tr><td>Permission/Index</td><td>render, createModal: void, create: void, editModal(Permission $permission): void, update: void, deleteSelected: void, delete(Permission $permission): void</td></tr><tr><td>Pos/Index</td><td>mount: void, hydrate: void, render, store: void, proceed: void, calculateTotal: mixed, resetCart: void, updatedWarehouseId($value): void</td></tr><tr><td>Printer/Create</td><td>mount(Printer $printer): void, render, createPrinter: void, create: void</td></tr><tr><td>Printer/Index</td><td>render, showModal(Printer $printer): void, editModal(Printer $printer): void, update(Printer $printer): void, delete(Printer $printer): void</td></tr><tr><td>Products/Barcode</td><td>updatedWarehouseId($value): void, productSelected(array $product): void, generateBarcodes: void, downloadBarcodes, deleteProduct($productId): void, render</td></tr><tr><td>Products/Create</td><td>render, saveEditorState($editorJsonData): void, createModal: void, create: void, categories, brands, warehouses</td></tr><tr><td>Products/Edit</td><td>saveEditorState($editorJsonData): void, addOption: void, removeOption($index): void, fetchSubcategories: void, editModal($id): void, update: void, categories, brands, render</td></tr><tr><td>Products/Highlighted</td><td>highlightModal($id): void, saveHighlight: void, render: View</td></tr><tr><td>Products/Image</td><td>imageModal($id): void, saveImage: void, render: View</td></tr><tr><td>Products/Import</td><td>render: View</td></tr><tr><td>Products/Index</td><td>deleteModal($product): void, deleteSelectedModal: void, deleteSelected: void, delete: void, render, sendTelegram($product): void, downloadAll: BinaryFileResponse, exportSelected: BinaryFileResponse, exportAll: BinaryFileResponse, downloadSelected, promoAllProducts: void, discountSelected: void</td></tr><tr><td>Products/ProductOptions</td><td>updatedOptions($options): void, addOption: void, removeOption($index): void, mount: void, render: View</td></tr><tr><td>Products/PromoPrices</td><td>promoModal: void, update: void, render: View</td></tr><tr><td>Products/Show</td><td>showModal($id): void, render</td></tr><tr><td>Purchase/Create</td><td>mount: void, render, hydrate: void, proceed: void, store: void, calculateTotal: mixed, resetCart: void, updatedWarehouseId($warehouse_id): void, updatedStatus($status): void, updatedPaymentMethod($payment_status): void</td></tr><tr><td>Purchase/Edit</td><td>mount($id): void, update: void, render, hydrate: void, calculateTotal: mixed, resetCart: void, updatedWarehouseId($warehouse_id): void, updatedStatus($value): void</td></tr><tr><td>Purchase/Index</td><td>filterByType($type): void, mount: void, render, deleteSelected: void, delete(Purchase $purchase): void</td></tr><tr><td>Payment/Index</td><td>mount($purchase): void, render, showPayments($purchase_id): void</td></tr><tr><td>Purchase/PaymentForm</td><td>render, paymentModal($id): void, paymentSave: void</td></tr><tr><td>Purchase/Show</td><td>showModal($id): void, render</td></tr><tr><td>PurchaseReturn/Create</td><td>mount: void, create: void, render</td></tr><tr><td>PurchaseReturn/Edit</td><td>editModal($id): void, update: void, render</td></tr><tr><td>PurchaseReturn/Index</td><td>render, deleteSelected: void, delete(PurchaseReturn $purchasereturn): void, paymentModal(PurchaseReturn $purchasereturn): void, paymentSave: void</td></tr><tr><td>PurchaseReturn/Show</td><td>showModal($id): void, render</td></tr><tr><td>Quotations/Create</td><td>proceed: void, mount: void, store, hydrate: void, calculateTotal: float</td></tr><tr><td>Quotations/Edit</td><td>mount($id): void, update, render, updatedWarehouseId($value): void</td></tr><tr><td>Quotations/Index</td><td>render, deleteSelected: void, delete(Quotation $product): void</td></tr><tr><td>Quotations/Show</td><td>render, showModal($id): void</td></tr><tr><td>Reports/CustomersReport</td><td>mount: void, sales, saleReturns, quotations, render, generateReport: void</td></tr><tr><td>Reports/PaymentsReport</td><td>mount: void, render, generateReport: void, updatedPayments($value): void, getQuery: void</td></tr><tr><td>Reports/ProductReport</td><td>render</td></tr><tr><td>Reports/ProfitLossReport</td><td>mount: void, render, generateReport: void, setValues: void, calculateProfit: int</td></tr><tr><td>Reports/PurchasesReport</td><td>mount: void, render, generateReport: void</td></tr><tr><td>Reports/PurchasesReturnReport</td><td>mount: void, render, generateReport: void</td></tr><tr><td>Reports/SalesReport</td><td>mount: void, render, generateReport: void</td></tr><tr><td>Reports/SalesReturnReport</td><td>mount: void, render, generateReport: void</td></tr><tr><td>Reports/StockAlertReport</td><td>getProductAlertProperty, render</td></tr><tr><td>Reports/SuppliersReport</td><td>mount: void, getPurchasesProperty, render, generateReport: void</td></tr><tr><td>Reports/WarehouseReport</td><td>mount: void, purchases, sales, quotations, expenses, warehouseReport: void, render</td></tr><tr><td>Reviews/Index</td><td>render: View</td></tr><tr><td>Role/Create</td><td>mount: void, render, submit</td></tr><tr><td>Role/Edit</td><td>mount(Role $role): void, render, submit</td></tr><tr><td>Role/Index</td><td>render, deleteSelected: void, delete(Role $role): void</td></tr><tr><td>SaleReturn/Index</td><td>render, showModal(SaleReturn $salereturn): void, deleteSelected: void, delete(SaleReturn $product): void, paymentModal(SaleReturn $salereturn): void, paymentSave: void</td></tr><tr><td>Sales/Create</td><td>mount: void, hydrate: void, render, proceed: void, store: void, calculateTotal: float</td></tr><tr><td>Sales/Edit</td><td>mount($id): void, proceed: void, update: void, render, updatedWarehouseId($value): void, updatedStatus($value): void</td></tr><tr><td>Sales/Index</td><td>mount: void, filterByType($type): void, render, importModal: void, downloadSample: BinaryFileResponse, import: void, deleteSelected: void, delete: void, deleteModal($id): void, sendWhatsapp($sale), openWhatapp($url): void</td></tr><tr><td>Payment/Index</td><td>render, showPayments($id): void, delete($id): void</td></tr><tr><td>Sales/PaymentForm</td><td>paymentModal($id): void, paymentSave: void, render</td></tr><tr><td>Sales/Recent</td><td>render, showModal($id): void, recentSales: void</td></tr><tr><td>Sales/Show</td><td>showModal($id): void, render</td></tr><tr><td>Sales/SyncOrders</td><td></td></tr><tr><td>Section/Create</td><td>createModal: void, render, save: void, languages</td></tr><tr><td>Section/Edit</td><td>editModal($id): void, update: void, render: View, languages</td></tr><tr><td>Section/Index</td><td>render, delete: void, deleteSelected: void, confirmed: void, deleteModal($section): void, clone(Section $section): void</td></tr><tr><td>Section/Settings</td><td>updatedSectionId: void, mount, sections, save: void, templates: array, render</td></tr><tr><td>Section/Template</td><td>mount: void, createModal: void, updatedSelectTemplate: void, create: void, render</td></tr><tr><td>Settings/ApiToken</td><td>mount: void, createToken: void, deleteToken: void, countNotExistingProducts: int, render</td></tr><tr><td>Settings/Index</td><td>render, mount: void, update: void</td></tr><tr><td>Settings/InvoiceTheme</td><td>mount, sale($id): Response, render</td></tr><tr><td>Settings/Languages</td><td>mount: void, render: View</td></tr><tr><td>Settings/MaintenanceMode</td><td>mount: void, saveSettings: void, turnOff: RedirectResponse, turnOn: void, render</td></tr><tr><td>Settings/Messaging</td><td>mount: void, getProductsProperty, getCustomersProperty, getSalesProperty, updatedType: void, fillMessage($template): void, sendDueAmount($saleId): void, openProductModal: void, openClientModal: void, openTemplate: void, insertProduct($id): void, insertSale($id): void, selectCustomer($customerId): void, sendMessage: void, render</td></tr><tr><td>Settings/Page</td><td>render: View</td></tr><tr><td>Settings/PopupSettings</td><td>setDefault($id): void, popupModal($popup = null): void, create: void, update($popup): void, render</td></tr><tr><td>Settings/Redirects</td><td>editModal($id): void, update: void, delete(Redirect $redirect): void, render: View</td></tr><tr><td>Settings/Smtp</td><td>mount: void, render, update: void</td></tr><tr><td>Settings/Update</td><td>checkForUpdates: void, updateSystem: void, render</td></tr><tr><td>Shipping/Create</td><td>render, createModal: void, create: void</td></tr><tr><td>Shipping/Edit</td><td>render: View</td></tr><tr><td>Shipping/Index</td><td>confirmed: void, render: View</td></tr><tr><td>Slider/Create</td><td>render, createModal: void, create: void</td></tr><tr><td>Slider/Edit</td><td>editModal($id): void, update: void, render: View</td></tr><tr><td>Slider/Index</td><td>render, setFeatured($id): void, showModal(Slider $slider): void, delete(Slider $slider): void</td></tr><tr><td>Stats/Transactions</td><td>mount: void, chart: void, topProducts, topCustomers, monthlyChartOptions: array, dailyChartOptions: array, paymentChart: array, render</td></tr><tr><td>Subcategory/Create</td><td>render: View</td></tr><tr><td>Subcategory/Edit</td><td>editModal($id): void, update: void, categories, languages, render: View</td></tr><tr><td>Subcategory/Index</td><td>confirmed: void, render: View</td></tr><tr><td>Subscriber/Index</td><td>render: View</td></tr><tr><td>Suppliers/Create</td><td>render, createModal: void, create: void</td></tr><tr><td>Suppliers/Details</td><td>mount($id): void, TotalPurchases: float, TotalPurchaseReturns: float, TotalDue: float, TotalPayments: float, Debit: float, getPurchasesProperty, getSupplierPaymentsProperty, render</td></tr><tr><td>Suppliers/Edit</td><td>render, editModal($id): void, update: void</td></tr><tr><td>Suppliers/Index</td><td>render, delete(Supplier $supplier): void, deleteSelected: void, importModal: void, downloadSample, import: void, downloadSelected, downloadAll(Supplier $suppliers), exportSelected: BinaryFileResponse, exportAll: BinaryFileResponse</td></tr><tr><td>Suppliers/PayDue</td><td>getPurchasesSupplierDueProperty, makePayment: void, render</td></tr><tr><td>Suppliers/Show</td><td>showModal($id): void, render</td></tr><tr><td>Sync/Login</td><td>loginModal: void, authenticate: void, render</td></tr><tr><td>Sync/Orders</td><td>updatedType: void, sync: void, render</td></tr><tr><td>Sync/Products</td><td>syncModal: void, recieveData: void, sendData, render</td></tr><tr><td>Users/Create</td><td>render, createModal: void, create: void, warehouses, roles</td></tr><tr><td>Users/Edit</td><td>editModal($id): void, update: void, roles, warehouses, render: View</td></tr><tr><td>Users/Index</td><td>filterRole($role): void, render, getRolesProperty, assignRole(User $user, $role): void, deleteSelected: void, delete(User $user): void, showModal(User $user): void</td></tr><tr><td>Users/Profile</td><td>mount: void, render, update: void, updatePassword: void</td></tr><tr><td>Users/Show</td><td>showModal($id): void, render</td></tr><tr><td>Warehouses/Create</td><td>render, createModal: void, create: void</td></tr><tr><td>Warehouses/Edit</td><td>render, editModal($id): void, update: void</td></tr><tr><td>Warehouses/Index</td><td>render, showModal(Warehouse $warehouse): void, deleteModal($warehouse): void, deleteSelectedModal: void, deleteSelected: void, delete: void</td></tr><tr><td>Auth/ConfirmPassword</td><td>confirmPassword, render</td></tr><tr><td>Auth/ForgotPassword</td><td>sendResetPasswordLink: void, broker, render</td></tr><tr><td>Auth/Login</td><td>authenticate, render</td></tr><tr><td>Auth/Register</td><td>mount: void, register, render</td></tr><tr><td>Auth/ResetPassword</td><td>mount(string $token): void, resetPassword: void, render</td></tr><tr><td>Auth/Verify</td><td>sendVerification: void, logout: void, render</td></tr><tr><td>Front/Account</td><td>mount: void, save: void, render</td></tr><tr><td>Front/AddToCart</td><td>mount(Product $product): void, AddToCart(Product $product_id): void, render: View</td></tr><tr><td>Front/Blogs</td><td>categorySelected($category): void, featuredBlogs, categories, sections, render</td></tr><tr><td>Front/BlogShow</td><td>mount($slug): void, featuredBlogs, categories, render</td></tr><tr><td>Front/BrandPage</td><td>filterProductCategories($category_id): void, filterProductSubcategories($subcategory_id): void, mount($brand): void, loadMore: void, render: View</td></tr><tr><td>Front/Brands</td><td>updatingPerPage: void, filterProducts($type, $value): void, clearFilter($filter): void, mount: void, loadMore: void, render: View</td></tr><tr><td>Front/CartBar</td><td>confirmed: void, showCart: void, decreaseQuantity($rowId): void, increaseQuantity($rowId): void, removeFromCart($rowId): void, cartBarUpdated: void, cartItems, cartTotal, render: View</td></tr><tr><td>Front/CartCount</td><td>mount: void, cartCountUpdated: void, render: View</td></tr><tr><td>Front/Catalog</td><td>filterProducts($type, $value): void, clearFilter($filter): void, mount: void, render: View</td></tr><tr><td>Front/Categories</td><td>filterProducts($type, $value): void, clearFilter($filter): void, mount: void, loadMore: void, render: View</td></tr><tr><td>Front/Checkout</td><td>confirmed: void, checkout, mount, updateCartTotal: void, decreaseQuantity($rowId): void, increaseQuantity($rowId): void, removeFromCart($rowId): void, shippings, cartTotal, cartItems, subTotal, render: View</td></tr><tr><td>Front/ContactForm</td><td>render, submit: void</td></tr><tr><td>Front/DynamicPage</td><td>mount(?string $slug = &#39;home&#39;): void, sliders, aboutSection, contactSection, render</td></tr><tr><td>Front/Index</td><td>getSubcategoriesProperty: Collection, getFeaturedProductsProperty, getBestOffersProperty, getHotProductsProperty, getBrandsProperty: Collection, getSlidersProperty: Collection, getFeaturedbannerProperty, getSectionsProperty: Collection, render: View</td></tr><tr><td>Front/NewslettersForm</td><td>render: View</td></tr><tr><td>Front/OrderForm</td><td>mount($product): void, render: View</td></tr><tr><td>Front/Popups</td><td>showDelay(int $delay): void, showDuration(int $duration): void, showInterval(int $interval): void, render, hide: void</td></tr><tr><td>Front/ProductShow</td><td>decreaseQuantity: void, increaseQuantity: void, AddToCart($id, $price): void, mount($slug): void, render: View</td></tr><tr><td>Front/SearchBox</td><td>updatedSearch: void, hideSearchResults: void, clearSearch: void, render: View</td></tr><tr><td>Front/StepWizard</td><td>nextStep: void, prevStep: void, updateGiftOrSelf($giftOrSelf): void, updateCategoryId($category_id): void, updateBrandId($brand_id): void, updatedMinPrice($value): void, updatedMaxPrice($value): void, updateSubcategoryId($subcategory_id): void, clearFilter($filter): void, render</td></tr><tr><td>Front/Subcategories</td><td>filterProductSubcategories($subcategory_id): void, subcategories, render: View</td></tr><tr><td>Front/SubcategoryPage</td><td>getBrandsProperty, filterProducts($type, $value): void, clearFilter($filter): void, mount($slug): void, loadMore: void, render: View</td></tr><tr><td>Front/SubscribeForm</td><td>mount($race): void, render: View</td></tr><tr><td>Front/ThankYou</td><td>mount($id): void, render: View</td></tr><tr><td>Livewire/ProductCart</td><td>mount($cartInstance, $data = null): void, productSelected(array $product): void, calculate(array $product): array, updatePrice($row_id, $product_id): void, updatedGlobalTax: void, updatedGlobalDiscount: void, updatedTotalShipping: void, updatedShippingAmount($value): void, discountModal($product_id, $row_id): void, updateQuantity($row_id, $product_id): void, removeItem($row_id): void, updatedDiscountType($value, $name): void, productDiscount($row_id, $product_id): void, updateCartOptions($row_id, $product_id, $cart_item, $discount_amount): void, updatedWarehouseId($value): void, render</td></tr><tr><td>Livewire/SearchProduct</td><td>loadMore: void, selectProduct($product): void, updatedWarehouseId($value): void, getCategoriesProperty, mount($warehouse_id = null): void, render, resetQuery: void, updatedQuery: void</td></tr><tr><td>Seo/VerifySite</td><td>mount, verifySiteModal, isVerified, getVerificationToken, verifySite, render</td></tr><tr><td>Admin/WIthMeta</td><td></td></tr><tr><td>Admin/WithModels</td><td>customers, suppliers, warehouses</td></tr><tr><td>Utils/Cache</td><td>render, onClearCache: void</td></tr><tr><td>Utils/Calculator</td><td>render, calculate: void, updated($property): void</td></tr><tr><td>Utils/ColorPicker</td><td>mount: void, showColorPalette($color): void, selectColor($color): void, render</td></tr><tr><td>Utils/Datatable</td><td>mountDatatable: void, sortingBy($field, $direction): void, selectedCount: int, refreshIndex: void, resetSelected: void</td></tr><tr><td>Utils/EditorJs</td><td>mount(, completedImageUpload(string $uploadedFileName, string $eventName, $fileName = null): void, loadImageFromUrl(string $url), save: void, render</td></tr><tr><td>Front/WithModels</td><td>categories, brands, subcategories</td></tr><tr><td>Utils/Livesearch</td><td>mount: void, render</td></tr><tr><td>Utils/Logs</td><td>render</td></tr><tr><td>Utils/Meta</td><td>render</td></tr><tr><td>Utils/Notifications</td><td>mount: void, loadMore: void, markAsRead($key): void, readAll: void, clear: void, render</td></tr><tr><td>Utils/QrGenerator</td><td>render: View, refresh: void, generateWebsiteUrl: void, data: void, generateQrCode($download = false): void, downloadQrCode</td></tr><tr><td>QueueMonitor/Index</td><td>mount: void, delete: void, render</td></tr><tr><td>Utils/Sidebar</td><td>render: View</td></tr><tr><td>Utils/ToggleButton</td><td>mount: void, updating($field, $value): void, render</td></tr></tbody></table>',2),a=[i];function n(s,l,v,u,c,p){return d(),e("div",null,a)}const g=t(o,[["render",n]]);export{m as __pageData,g as default};
